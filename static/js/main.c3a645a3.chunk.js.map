{"version":3,"sources":["BFS/BFS.jsx","App.js","serviceWorker.js","index.js"],"names":["DUMMY_OBSTACLES","BFS","props","handleMouseMove","bind","handleClick","state","hexSize","hexOrigin","x","y","currentHex","q","r","s","obstacles","playerPosition","cameFrom","hexPathMap","path","hexParameters","this","getHexParameters","setState","canvasSize","canvasWidth","canvasHeight","canvasHex","width","height","canvasInteraction","canvasView","getCanvasPosition","drawHex","Point","drawHexes","drawObstacles","nextProps","nextState","getContext","clearRect","drawPath","ctx","l","JSON","parse","hexToPixel","Hex","from","fromCoord","drawArrow","center","i","angle_deg","angle_rad","Math","PI","cos","sin","canvasID","lineWidth","lineColor","fillColor","start","getHexCornerCoord","end","fillHex","drawLine","hexWidth","hexHeight","vertDist","horizDist","qLeftSide","round","qRightSide","rTopSide","rBottomSide","p","bottomH","stringify","includes","push","n","topH","concat","breadthFirstSearchCallback","breadthFirstSearch","h","sqrt","beginPath","moveTo","strokeStyle","lineTo","stroke","closePath","fillText","e","canvasPosition","left","top","right","bottom","offsetX","pageX","offsetY","pageY","cubeRound","pixelToHex","getDistanceLine","getPath","rect","getBoundingClientRect","size","origin","cube","rx","ry","rz","x_diff","abs","y_diff","z_diff","direction","cubeDirections","a","b","hexA","hexB","cubeAdd","getCubeNeighbours","cubeSubtract","t","linearInt","dist","cubeDistance","arr","cubeLinearInt","currentDistanceLine","c0","c1","c2","c3","c4","c5","fillStyle","globalAlpha","fill","map","frontier","length","current","shift","getNeighbours","hasOwnProperty","Object","assign","undefined","fromx","fromy","tox","toy","angle","atan2","className","ref","canvasCoordinates","onMouseMove","onClick","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yOAIIA,G,MAAkB,CAAC,wBAAyB,wBAAyB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,wBAAyB,wBAAyB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,0BAA2B,0BAA2B,yBAA0B,yBAA0B,yBAA0B,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,uBAAwB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,uBAAwB,uBAAwB,uBAAwB,wBAAyB,wBAAyB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,wBAAyB,wBAAyB,wBAAyB,yBAA0B,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,wBAAyB,uBAAwB,wBAAyB,wBAAyB,wBAAyB,yBAA0B,yBAA0B,0BAA2B,0BAA2B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,uBAAwB,uBAAwB,uBAAwB,uBAAwB,uBAAwB,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,yBAA0B,wBAAyB,wBAAyB,uBAAwB,uBAAwB,wBAAyB,wBAAyB,wBAAyB,yBAA0B,uBAAwB,wBAAyB,wBAAyB,0BAE3rGC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,MAAQ,CACTC,QAAS,GACTC,UAAW,CAAEC,EAAG,IAAKC,EAAG,KACxBC,WAAY,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGL,EAAG,EAAGC,EAAG,GACzCK,UAAWf,EACXgB,eAAgB,CAAEJ,EAAE,EAAEC,EAAE,EAAEC,EAAE,GAC5BG,SAAU,GACVC,WAAY,GACZC,KAAM,IAbK,E,iEAkBf,IAAIC,EAAgBC,KAAKC,mBACzBD,KAAKE,SAAS,CACVC,WAAY,CAAEC,YAAa,IAAKC,aAAc,KAC9CN,cAAeA,M,0CAIF,IAAD,EACsBC,KAAKf,MAAMkB,WAAzCC,EADQ,EACRA,YAAaC,EADL,EACKA,aACrBL,KAAKM,UAAUC,MAAQH,EACvBJ,KAAKM,UAAUE,OAASH,EACxBL,KAAKS,kBAAkBF,MAAQH,EAC/BJ,KAAKS,kBAAkBD,OAASH,EAChCL,KAAKU,WAAWH,MAAQH,EACxBJ,KAAKU,WAAWF,OAASH,EACzBL,KAAKW,kBAAkBX,KAAKS,mBAC5BT,KAAKY,QAAQZ,KAAKS,kBAAmBT,KAAKa,MAAMb,KAAKf,MAAMU,eAAeP,EAAGY,KAAKf,MAAMU,eAAeN,GAAI,EAAG,QAAS,OAAQ,IAC/HW,KAAKc,YACLd,KAAKe,kB,4CAGaC,EAAWC,GAC7B,GAAGA,EAAU3B,aAAeU,KAAKf,MAAMK,WAAW,CAAC,IAAD,EACpB2B,EAAU3B,WADU,KACtCC,EADsC,EACnCC,EADmC,EAChCC,EADgC,EAC7BL,EAD6B,EAC1BC,EACkBW,KAAKf,MAAMkB,YAAzCC,EAFsC,EAEtCA,YAAaC,EAFyB,EAEzBA,aAIrB,OAHYL,KAAKS,kBAAkBS,WAAW,MAC1CC,UAAU,EAAG,EAAGf,EAAaC,GACjCL,KAAKoB,YACE,EAEX,GAAGH,EAAUrB,WAAaI,KAAKf,MAAMW,SAAU,CAAC,IAAD,EACLI,KAAKf,MAAMkB,WAAzCC,EADmC,EACnCA,YAAaC,EADsB,EACtBA,aACfgB,EAAMrB,KAAKU,WAAWQ,WAAW,MAEvC,IAAM,IAAII,KADVD,EAAIF,UAAU,EAAE,EAAEf,EAAaC,GAChBY,EAAUrB,SAAU,CAAC,IAAD,EACX2B,KAAKC,MAAMF,GAAvB/B,EADuB,EACvBA,EAAGC,EADoB,EACpBA,EADoB,KACjBC,EACGO,KAAKyB,WAAWzB,KAAK0B,IAAInC,EAAEC,KAApCJ,EAFuB,EAEvBA,EAAGC,EAFoB,EAEpBA,EACXW,KAAKY,QAAQZ,KAAKU,WAAYV,KAAKa,MAAMzB,EAAEC,GAAI,EAAG,QAAS,QAAS,IACpE,IAAIsC,EAAOJ,KAAKC,MAAMP,EAAUrB,SAAS0B,IACrCM,EAAY5B,KAAKyB,WAAWzB,KAAK0B,IAAIC,EAAKpC,EAAGoC,EAAKnC,IACtDQ,KAAK6B,UAAUD,EAAUxC,EAAGwC,EAAUvC,EAAGD,EAAGC,GAEhD,OAAO,EAEX,OAAO,I,wCAGOyC,EAAQC,GACtB,IAAIC,EAAY,GAAKD,EAAI,GACrBE,EAAYC,KAAKC,GAAK,IAAMH,EAC5B5C,EAAI0C,EAAO1C,EAAIY,KAAKf,MAAMC,QAAUgD,KAAKE,IAAIH,GAC7C5C,EAAIyC,EAAOzC,EAAIW,KAAKf,MAAMC,QAAUgD,KAAKG,IAAIJ,GACjD,OAAOjC,KAAKa,MAAMzB,EAAEC,K,4BAGlBD,EAAEC,GACJ,MAAO,CAAED,EAAGA,EAAGC,EAAGA,K,8BAGdiD,EAAUR,EAAQS,EAAWC,EAAWC,GAC5C,IAAK,IAAIV,EAAI,EAAGA,GAAI,EAAGA,IAAI,CACvB,IAAIW,EAAQ1C,KAAK2C,kBAAkBb,EAAQC,GACvCa,EAAM5C,KAAK2C,kBAAkBb,EAAQC,EAAI,GAC7C/B,KAAK6C,QAAQP,EAAUR,EAAQW,GAC/BzC,KAAK8C,SAASR,EAAUI,EAAOE,EAAKL,EAAWC,M,kCAenD,IAXQ,IAAD,SAC+BxC,KAAKf,MAAMkB,WAAzCC,EADD,EACCA,YAAaC,EADd,EACcA,aADd,EAE8CL,KAAKf,MAAMc,cAAxDgD,EAFD,EAECA,SAAUC,EAFX,EAEWA,UACZ7D,GAHC,EAEsB8D,SAFtB,EAEgCC,UACrBlD,KAAKf,MAAME,WACzBgE,EAA+C,EAAnCjB,KAAKkB,MAAMjE,EAAUC,EAAE2D,GACnCM,EAAanB,KAAKkB,MAAMhD,EAAcjB,EAAUC,GAAK2D,EAAW,EAChEO,EAAWpB,KAAKkB,MAAMjE,EAAUE,GAAG2D,EAAU,IAC7CO,EAAcrB,KAAKkB,OAAO/C,EAAelB,EAAUE,IAAI2D,EAAU,IACjEnD,EAAa,GAEb2D,EAAI,EACChE,EAAI,EAAGA,GAAI+D,EAAa/D,IAAI,CAC9BA,EAAI,IAAM,GAAW,IAANA,GACdgE,IAGJ,IAAI,IAAIjE,GAAK4D,EAAW5D,GAAK8D,EAAY9D,IAAI,CAAC,IAAD,EACxBS,KAAKyB,WAAWzB,KAAK0B,IAAInC,EAAEiE,EAAGhE,IAAvCJ,EADiC,EACjCA,EAAGC,EAD8B,EAC9BA,EACX,GAAID,EAAG2D,EAAS,GAAK3D,EAAIgB,EAAc2C,EAAS,GAAO1D,EAAI2D,EAAU,GAAK3D,EAAIgB,EAAe2C,EAAU,EAAG,CACtGhD,KAAKY,QAAQZ,KAAKM,UAAWN,KAAKa,MAAMzB,EAAEC,GAAI,EAAG,QAAS,QAE1D,IAAIoE,EAAUlC,KAAKmC,UAAU1D,KAAK0B,IAAInC,EAAEiE,EAAGhE,IAAKD,EAAEiE,GAAIhE,IAClDQ,KAAKf,MAAMS,UAAUiE,SAASF,IAC9B5D,EAAW+D,KAAKH,KAOhC,IADA,IAAII,EAAI,EACArE,GAAK,EAAGA,IAAM8D,EAAU9D,IAAK,CAC9BA,EAAE,IAAM,GACPqE,IAEJ,IAAI,IAAItE,GAAK4D,EAAW5D,GAAK8D,EAAY9D,IAAI,CAAC,IAAD,EACxBS,KAAKyB,WAAWzB,KAAK0B,IAAInC,EAAEsE,EAAGrE,IAAvCJ,EADiC,EACjCA,EAAGC,EAD8B,EAC9BA,EACX,GAAID,EAAE2D,EAAS,GAAK3D,EAAIgB,EAAc2C,EAAS,GAAO1D,EAAI2D,EAAU,GAAK3D,EAAEgB,EAAe2C,EAAU,EAAG,CACnGhD,KAAKY,QAAQZ,KAAKM,UAAWN,KAAKa,MAAMzB,EAAEC,GAAI,EAAG,QAAS,QAE1D,IAAIyE,EAAOvC,KAAKmC,UAAU1D,KAAK0B,IAAInC,EAAEsE,EAAGrE,IAAKD,EAAEsE,GAAIrE,IAC/CQ,KAAKf,MAAMS,UAAUiE,SAASG,IAC9BjE,EAAW+D,KAAKE,KAKhCjE,EAAa,GAAGkE,OAAOlE,GACvBG,KAAKE,SACD,CAACL,WAAYA,GACbG,KAAKgE,2BAA6B,kBAAM,EAAKC,mBAAmB,EAAKhF,MAAMU,oB,iCAIxEuE,GACP,IAAI/E,EAAYa,KAAKf,MAAME,UACvBC,EAAIY,KAAKf,MAAMC,QAAUgD,KAAKiC,KAAK,IAAMD,EAAE3E,EAAI2E,EAAE1E,EAAE,GAAKL,EAAUC,EAClEC,EAAyB,EAArBW,KAAKf,MAAMC,QAAY,EAAIgF,EAAE1E,EAAIL,EAAUE,EACnD,OAAOW,KAAKa,MAAMzB,EAAGC,K,0BAGrBE,EAAEC,EAAGC,GACL,MAAO,CAACF,EAAGA,EAAGC,EAAGA,EAAGC,EAAEA,K,+BAGjB6C,EAAUI,EAAOE,EAAKL,EAAWC,GACtC,IAAMnB,EAAMiB,EAASpB,WAAW,MAChCG,EAAI+C,YACJ/C,EAAIgD,OAAO3B,EAAMtD,EAAGsD,EAAMrD,GAC1BgC,EAAIiD,YAAc9B,EAClBnB,EAAIkB,UAAYA,EAChBlB,EAAIkD,OAAO3B,EAAIxD,EAAGwD,EAAIvD,GACtBgC,EAAImD,SACJnD,EAAIoD,c,oCAGMnC,EAAUR,EAAQoC,GAC5B,IAAM7C,EAAMiB,EAASpB,WAAW,MAChCG,EAAIqD,SAASR,EAAE3E,EAAGuC,EAAO1C,EAAE,GAAI0C,EAAOzC,GACtCgC,EAAIqD,SAASR,EAAE1E,EAAGsC,EAAO1C,EAAE,EAAG0C,EAAOzC,GACrCgC,EAAIqD,SAASR,EAAEzE,EAAGqC,EAAO1C,EAAE,GAAI0C,EAAOzC,K,yCAItC,IAAI2D,EAAiC,EAArBhD,KAAKf,MAAMC,QACvB6D,EAAWb,KAAKiC,KAAK,GAAG,EAAInB,EAGhC,MAAO,CAAED,WAAUC,YAAWC,SAFH,EAAZD,EAAc,EAEWE,UADxBH,K,sCAIJ4B,GAAG,IAAD,EACuB3E,KAAKf,MAAM2F,eAAxCC,EADM,EACNA,KAAaC,GADP,EACAC,MADA,EACOD,KADP,KACYE,OACYhF,KAAKf,MAAMkB,YAAzCC,EAFM,EAENA,YAAaC,EAFP,EAEOA,aAFP,EAGuCL,KAAKf,MAAMc,cAAxDgD,EAHM,EAGNA,SAAUC,EAHJ,EAGIA,UAEdiC,GALU,EAGehC,SAHf,EAGyBC,UAEzByB,EAAEO,MAAQL,GACpBM,EAAUR,EAAES,MAAQN,EANV,EAOM9E,KAAKqF,UAAUrF,KAAKsF,WAAWtF,KAAKa,MAAMoE,EAASE,KAA/D5F,EAPM,EAONA,EAAGC,EAPG,EAOHA,EAAGC,EAPA,EAOAA,EAPA,EAQGO,KAAKyB,WAAWzB,KAAK0B,IAAInC,EAAGC,EAAEC,IAAvCL,EARM,EAQNA,EAAGC,EARG,EAQHA,EACPM,EAAiBK,KAAKf,MAAMU,eAChCK,KAAKuF,gBAAgBvF,KAAK0B,IAAI,EAAE,EAAE,GAAI1B,KAAK0B,IAAInC,EAAEC,EAAEC,IACnDO,KAAKwF,QAAQxF,KAAK0B,IAAI/B,EAAeJ,EAAGI,EAAeH,EAAGG,EAAeF,GAAIO,KAAK0B,IAAInC,EAAEC,EAAEC,IAC1FO,KAAKY,QAAQZ,KAAKS,kBAAmBT,KAAKa,MAAMzB,EAAEC,GAAI,OAAQ,GAC1DD,EAAI2D,EAAS,GAAK3D,EAAGgB,EAAc2C,EAAW,GAAO1D,EAAI2D,EAAY,GAAK3D,EAAIgB,EAAe2C,EAAU,GACvGhD,KAAKE,SAAS,CACVZ,WAAY,CAAEC,IAAEC,IAAEC,IAAEL,IAAEC,S,wCAMhBiD,GACd,IAAImD,EAAOnD,EAASoD,wBACpB1F,KAAKE,SAAS,CACV0E,eAAgB,CAAEC,KAAMY,EAAKZ,KAAME,MAAOU,EAAKV,MAAOD,IAAKW,EAAKX,IAAKE,OAAQS,EAAKT,Y,iCAI/ExB,GACP,IAAImC,EAAO3F,KAAKf,MAAMC,QAClB0G,EAAS5F,KAAKf,MAAME,UACpBI,IAAMiE,EAAEpE,EAAIwG,EAAOxG,GAAK8C,KAAKiC,KAAK,GAAG,GAAKX,EAAEnE,EAAIuG,EAAOvG,GAAG,GAAIsG,EAC9DnG,EAAuB,GAAlBgE,EAAEnE,EAAIuG,EAAOvG,GAAO,EAAGsG,EAChC,OAAO3F,KAAK0B,IAAInC,EAAGC,GAAID,EAAIC,K,gCAGrBqG,GACN,IAAIC,EAAK5D,KAAKkB,MAAMyC,EAAKtG,GACrBwG,EAAK7D,KAAKkB,MAAMyC,EAAKrG,GACrBwG,EAAK9D,KAAKkB,MAAMyC,EAAKpG,GAErBwG,EAAS/D,KAAKgE,IAAIJ,EAAKD,EAAKtG,GAC5B4G,EAASjE,KAAKgE,IAAIH,EAAKF,EAAKrG,GAC5B4G,EAASlE,KAAKgE,IAAIF,EAAKH,EAAKpG,GAWhC,OATGwG,EAASE,GAAUF,EAASG,EAC3BN,GAAMC,EAAGC,EAELG,EAASC,EACbL,GAAMD,EAAGE,EAGTA,GAAMF,EAAGC,EAEN/F,KAAK0B,IAAIoE,EAAIC,EAAIC,K,qCAGbK,GACX,IAAMC,EAAiB,CAACtG,KAAK0B,IAAI,EAAE,GAAG,GAAI1B,KAAK0B,IAAI,GAAG,EAAE,GAAI1B,KAAK0B,IAAI,GAAG,EAAE,GAAI1B,KAAK0B,KAAK,EAAE,EAAE,GACxF1B,KAAK0B,KAAK,EAAE,EAAE,GAAI1B,KAAK0B,IAAI,EAAE,GAAG,IACpC,OAAO4E,EAAeD,K,8BAGlBE,EAAEC,GACN,OAAOxG,KAAK0B,IAAI6E,EAAEhH,EAAIiH,EAAEjH,EAAGgH,EAAE/G,EAAIgH,EAAEhH,EAAG+G,EAAE9G,EAAI+G,EAAE/G,K,mCAGrCgH,EAAMC,GACf,OAAO1G,KAAK0B,IAAI+E,EAAKlH,EAAImH,EAAKnH,EAAGkH,EAAKjH,EAAIkH,EAAKlH,EAAGiH,EAAKhH,EAAIiH,EAAKjH,K,wCAGlDyE,EAAGmC,GACjB,OAAOrG,KAAK2G,QAAQzC,EAAGlE,KAAKsG,eAAeD,M,qCAGhCnC,GACX,IAAI,IAAInC,EAAI,EAAGA,GAAG,EAAGA,IAAI,CAAC,IAAD,EACD/B,KAAK4G,kBAAkB5G,KAAK0B,IAAIwC,EAAE3E,EAAG2E,EAAE1E,EAAG0E,EAAEzE,GAAIsC,GAA5DxC,EADa,EACbA,EAAGC,EADU,EACVA,EAAGC,EADO,EACPA,EADO,EAEJO,KAAKyB,WAAWzB,KAAK0B,IAAInC,EAAGC,EAAGC,IAAxCL,EAFa,EAEbA,EAAGC,EAFU,EAEVA,EACXW,KAAKY,QAAQZ,KAAKS,kBAAmBT,KAAKa,MAAMzB,EAAEC,GAAI,MAAO,M,mCAIxDoH,EAAMC,GAAM,IAAD,EACA1G,KAAK6G,aAAaJ,EAAMC,GAApCnH,EADY,EACZA,EAAGC,EADS,EACTA,EAAGC,EADM,EACNA,EACd,OAAQyC,KAAKgE,IAAI3G,GAAK2C,KAAKgE,IAAI1G,GAAK0C,KAAKgE,IAAIzG,IAAI,I,gCAG3C8G,EAAEC,EAAEM,GACV,OAAQP,GAAIC,EAAED,GAAKO,I,oCAGTL,EAAMC,EAAMI,GACtB,OAAO9G,KAAK0B,IAAI1B,KAAK+G,UAAUN,EAAKlH,EAAGmH,EAAKnH,EAAGuH,GAAI9G,KAAK+G,UAAUN,EAAKjH,EAAGkH,EAAKlH,EAAGsH,GAAI9G,KAAK+G,UAAUN,EAAKhH,EAAGiH,EAAKjH,EAAGqH,M,sCAGzGL,EAAMC,GAGlB,IAFA,IAAIM,EAAOhH,KAAMiH,aAAaR,EAAMC,GAChCQ,EAAM,GACFnF,EAAI,EAAGA,GAAIiF,EAAMjF,IAAI,CACzB,IAAID,EAAS9B,KAAKyB,WAAWzB,KAAKqF,UAAUrF,KAAKmH,cAAcV,EAAMC,EAAM,EAAMM,EAAOjF,KACxFmF,EAAM,GAAGnD,OAAOmD,EAAKpF,GAEzB9B,KAAKE,SAAS,CACVkH,oBAAqBF,M,8BAIrB5E,EAAUR,EAAQW,GACtB,IAAI4E,EAAKrH,KAAK2C,kBAAkBb,EAAQ,GACpCwF,EAAKtH,KAAK2C,kBAAkBb,EAAQ,GACpCyF,EAAKvH,KAAK2C,kBAAkBb,EAAQ,GACpC0F,EAAKxH,KAAK2C,kBAAkBb,EAAQ,GACpC2F,EAAKzH,KAAK2C,kBAAkBb,EAAQ,GACpC4F,EAAK1H,KAAK2C,kBAAkBb,EAAQ,GAClCT,EAAMiB,EAASpB,WAAW,MAChCG,EAAI+C,YACJ/C,EAAIsG,UAAYlF,EAChBpB,EAAIuG,YAAc,GAClBvG,EAAIgD,OAAOgD,EAAGjI,EAAGiI,EAAGhI,GACpBgC,EAAIkD,OAAO+C,EAAGlI,EAAGkI,EAAGjI,GACpBgC,EAAIkD,OAAOgD,EAAGnI,EAAGmI,EAAGlI,GACpBgC,EAAIkD,OAAOiD,EAAGpI,EAAGoI,EAAGnI,GACpBgC,EAAIkD,OAAOkD,EAAGrI,EAAGqI,EAAGpI,GACpBgC,EAAIkD,OAAOmD,EAAGtI,EAAGsI,EAAGrI,GACpBgC,EAAIoD,YACJpD,EAAIwG,S,oCAGM,IAAD,SACwB7H,KAAKf,MAA9BK,EADC,EACDA,WAAYM,EADX,EACWA,SACZL,EAAYD,EAAZC,EAAGC,EAASF,EAATE,EAAGC,EAAMH,EAANG,EACXG,EAAS2B,KAAKmC,UAAU1D,KAAK0B,IAAInC,EAAEC,EAAEC,MACpCO,KAAKE,SACD,CAACP,eAAgBK,KAAK0B,IAAInC,EAAEC,EAAEC,IAC9BO,KAAKgE,2BAA6B,kBAAM,EAAKC,mBAAmB,EAAKhF,MAAMU,oB,sCAKvE,IAAD,OACXK,KAAKf,MAAMS,UAAUoI,KAAI,SAACxG,GAAM,IAAD,EACPC,KAAKC,MAAMF,GAAvB/B,EADmB,EACnBA,EAAGC,EADgB,EAChBA,EAAGC,EADa,EACbA,EADa,EAEV,EAAKgC,WAAW,EAAKC,IAAInC,EAAEC,EAAEC,IAAtCL,EAFmB,EAEnBA,EAAGC,EAFgB,EAEhBA,EACX,EAAKuB,QAAQ,EAAKN,UAAW,EAAKO,MAAMzB,EAAEC,GAAI,EAAG,QAAS,c,oCAIpD6E,GAEV,IADA,IAAIgD,EAAM,GACFnF,EAAI,EAAGA,GAAG,EAAGA,IAAI,CAAC,IAAD,EACD/B,KAAK4G,kBAAkB5G,KAAK0B,IAAIwC,EAAE3E,EAAG2E,EAAE1E,EAAG0E,EAAEzE,GAAIsC,GAA5DxC,EADa,EACbA,EAAGC,EADU,EACVA,EAAGC,EADO,EACPA,EACdyH,EAAItD,KAAK5D,KAAK0B,IAAInC,EAAGC,EAAGC,IAE5B,OAAOyH,I,yCAGQvH,GAAgB,IAAD,OAC1BoI,EAAW,CAACpI,GACZC,EAAW,GAEf,IADAA,EAAS2B,KAAKmC,UAAU/D,IAAmB4B,KAAKmC,UAAU/D,GAC/B,IAApBoI,EAASC,QAAa,CACzB,IAAIC,EAAUF,EAASG,QACblI,KAAKmI,cAAcF,GACzBH,KAAI,SAACxG,IACD1B,EAASwI,eAAe7G,KAAKmC,UAAUpC,KAAO,EAAKrC,MAAMY,WAAW8D,SAASpC,KAAKmC,UAAUpC,MAC5FyG,EAASnE,KAAKtC,GACd1B,EAAS2B,KAAKmC,UAAUpC,IAAMC,KAAKmC,UAAUuE,OAIzDrI,EAAWyI,OAAOC,OAAO,GAAI1I,GAC7BI,KAAKE,SAAS,CACVN,SAAUA,M,8BAIV8C,EAAOuF,GAAS,IACZrI,EAAaI,KAAKf,MAAlBW,SAGR,GAFA8C,EAAQnB,KAAKmC,UAAUhB,QAEE6F,IAAtB3I,EADHqI,EAAU1G,KAAKmC,UAAUuE,IACU,CAE/B,IADA,IAAInI,EAAO,CAACmI,GACLA,IAAYvF,GACfuF,EAAUrI,EAASqI,GACnBnI,EAAK8D,KAAKqE,GAEdnI,EAAO,GAAGiE,OAAOjE,GACjBE,KAAKE,SAAS,CACVJ,KAAKA,O,iCAOb,IADA,IAAIA,EAAOE,KAAKf,MAAMa,KACdiC,EAAG,EAAGA,GAAGjC,EAAKkI,OAAQ,EAAGjG,IAAI,CAAC,IAAD,EAChBR,KAAKC,MAAM1B,EAAKiC,IAAzBxC,EADyB,EACzBA,EAAGC,EADsB,EACtBA,EADsB,EAEhBQ,KAAKyB,WAAWzB,KAAK0B,IAAInC,EAAGC,IAArCJ,EAFyB,EAEzBA,EAAGC,EAFsB,EAEtBA,EACXW,KAAKY,QAAQZ,KAAKS,kBAAmBT,KAAKa,MAAMzB,EAAEC,GAAI,EAAG,QAAS,c,gCAIhEmJ,EAAOC,EAAOC,EAAKC,GACzB,IAAItH,EAAMrB,KAAKU,WAAWQ,WAAW,MAEjC0H,EAAQ1G,KAAK2G,MAAMF,EAAIF,EAAOC,EAAIF,GACtCnH,EAAI+C,YACJ/C,EAAIgD,OAAOmE,EAAOC,GAClBpH,EAAIkD,OAAOmE,EAAKC,GAChBtH,EAAIiD,YAAc,UAClBjD,EAAIkB,UAAY,EAChBlB,EAAImD,SACJnD,EAAI+C,YACJ/C,EAAIgD,OAAOqE,EAAKC,GAChBtH,EAAIuG,YAAc,GAClBvG,EAAIkD,OAAOmE,EAXG,EAWSxG,KAAKE,IAAIwG,EAAM1G,KAAKC,GAAG,GAAIwG,EAXpC,EAWgDzG,KAAKG,IAAIuG,EAAM1G,KAAKC,GAAG,IACrFd,EAAIkD,OAAOmE,EAZG,EAYSxG,KAAKE,IAAIwG,EAAM1G,KAAKC,GAAG,GAAIwG,EAZpC,EAYgDzG,KAAKG,IAAIuG,EAAM1G,KAAKC,GAAG,IACrFd,EAAIkD,OAAOmE,EAAKC,GAChBtH,EAAIkD,OAAOmE,EAdG,EAcSxG,KAAKE,IAAIwG,EAAM1G,KAAKC,GAAG,GAAIwG,EAdpC,EAcgDzG,KAAKG,IAAIuG,EAAM1G,KAAKC,GAAG,IACrFd,EAAIiD,YAAc,SAClBjD,EAAIkB,UAAY,EAChBlB,EAAImD,SACJnD,EAAIsG,UAAY,SAChBtG,EAAIwG,S,+BAGC,IAAD,OACJ,OACI,yBAAKiB,UAAU,OACX,4BAAQC,IAAQ,SAAAzI,GAAS,OAAI,EAAKA,UAAYA,KAC9C,4BAAQyI,IAAQ,SAAAC,GAAiB,OAAI,EAAKA,kBAAoBA,KAC9D,4BAAQD,IAAQ,SAAArI,GAAU,OAAI,EAAKA,WAAaA,KAChD,4BAAQqI,IAAQ,SAAAtI,GAAiB,OAAI,EAAKA,kBAAoBA,GAC9DwI,YAAejJ,KAAKlB,gBACpBoK,QAASlJ,KAAKhB,mB,GA5ZGmK,IAAMC,WCKxBC,MARf,WACE,OACE,yBAAKP,UAAU,OACd,kBAAC,EAAD,QCMeQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.c3a645a3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './BFS.css';\r\n\r\nvar DUMMY_OBSTACLES = ['{\"q\":4,\"r\":-2,\"s\":-2}', '{\"q\":4,\"r\":-1,\"s\":-3}', '{\"q\":4,\"r\":0,\"s\":-4}', '{\"q\":4,\"r\":1,\"s\":-5}', '{\"q\":3,\"r\":2,\"s\":-5}', '{\"q\":2,\"r\":3,\"s\":-5}', '{\"q\":1,\"r\":4,\"s\":-5}', '{\"q\":0,\"r\":5,\"s\":-5}', '{\"q\":-1,\"r\":6,\"s\":-5}', '{\"q\":-2,\"r\":7,\"s\":-5}', '{\"q\":4,\"r\":-4,\"s\":0}', '{\"q\":3,\"r\":-4,\"s\":1}', '{\"q\":2,\"r\":-4,\"s\":2}', '{\"q\":1,\"r\":-4,\"s\":3}', '{\"q\":2,\"r\":-5,\"s\":3}', '{\"q\":3,\"r\":-6,\"s\":3}', '{\"q\":4,\"r\":-7,\"s\":3}', '{\"q\":5,\"r\":-9,\"s\":4}', '{\"q\":6,\"r\":-9,\"s\":3}', '{\"q\":7,\"r\":-9,\"s\":2}', '{\"q\":8,\"r\":-9,\"s\":1}', '{\"q\":9,\"r\":-9,\"s\":0}', '{\"q\":10,\"r\":-9,\"s\":-1}', '{\"q\":11,\"r\":-9,\"s\":-2}', '{\"q\":12,\"r\":-9,\"s\":-3}', '{\"q\":13,\"r\":-9,\"s\":-4}', '{\"q\":14,\"r\":-9,\"s\":-5}', '{\"q\":15,\"r\":-9,\"s\":-6}', '{\"q\":15,\"r\":-8,\"s\":-7}', '{\"q\":14,\"r\":-7,\"s\":-7}', '{\"q\":14,\"r\":-6,\"s\":-8}', '{\"q\":13,\"r\":-5,\"s\":-8}', '{\"q\":13,\"r\":-4,\"s\":-9}', '{\"q\":12,\"r\":-3,\"s\":-9}', '{\"q\":12,\"r\":-2,\"s\":-10}', '{\"q\":11,\"r\":-1,\"s\":-10}', '{\"q\":11,\"r\":0,\"s\":-11}', '{\"q\":10,\"r\":1,\"s\":-11}', '{\"q\":10,\"r\":2,\"s\":-12}', '{\"q\":9,\"r\":3,\"s\":-12}', '{\"q\":9,\"r\":4,\"s\":-13}', '{\"q\":8,\"r\":5,\"s\":-13}', '{\"q\":8,\"r\":6,\"s\":-14}', '{\"q\":7,\"r\":7,\"s\":-14}', '{\"q\":7,\"r\":8,\"s\":-15}', '{\"q\":6,\"r\":9,\"s\":-15}', '{\"q\":5,\"r\":9,\"s\":-14}', '{\"q\":4,\"r\":9,\"s\":-13}', '{\"q\":3,\"r\":9,\"s\":-12}', '{\"q\":2,\"r\":9,\"s\":-11}', '{\"q\":1,\"r\":9,\"s\":-10}', '{\"q\":0,\"r\":9,\"s\":-9}', '{\"q\":-1,\"r\":9,\"s\":-8}', '{\"q\":-2,\"r\":9,\"s\":-7}', '{\"q\":-3,\"r\":9,\"s\":-6}', '{\"q\":-4,\"r\":9,\"s\":-5}', '{\"q\":-5,\"r\":9,\"s\":-4}', '{\"q\":-5,\"r\":8,\"s\":-3}', '{\"q\":-5,\"r\":7,\"s\":-2}', '{\"q\":-5,\"r\":6,\"s\":-1}', '{\"q\":-5,\"r\":5,\"s\":0}', '{\"q\":-4,\"r\":4,\"s\":0}', '{\"q\":-3,\"r\":3,\"s\":0}', '{\"q\":-2,\"r\":-1,\"s\":3}', '{\"q\":-2,\"r\":-2,\"s\":4}', '{\"q\":-4,\"r\":1,\"s\":3}', '{\"q\":-4,\"r\":2,\"s\":2}', '{\"q\":-5,\"r\":3,\"s\":2}', '{\"q\":-7,\"r\":4,\"s\":3}', '{\"q\":-6,\"r\":4,\"s\":2}', '{\"q\":-8,\"r\":4,\"s\":4}', '{\"q\":-9,\"r\":4,\"s\":5}', '{\"q\":-10,\"r\":4,\"s\":6}', '{\"q\":-11,\"r\":4,\"s\":7}', '{\"q\":-12,\"r\":4,\"s\":8}', '{\"q\":-12,\"r\":2,\"s\":10}', '{\"q\":-12,\"r\":3,\"s\":9}', '{\"q\":-13,\"r\":4,\"s\":9}', '{\"q\":-13,\"r\":5,\"s\":8}', '{\"q\":-14,\"r\":6,\"s\":8}', '{\"q\":-14,\"r\":7,\"s\":7}', '{\"q\":-15,\"r\":8,\"s\":7}', '{\"q\":-15,\"r\":9,\"s\":6}', '{\"q\":-14,\"r\":9,\"s\":5}', '{\"q\":-13,\"r\":9,\"s\":4}', '{\"q\":-12,\"r\":9,\"s\":3}', '{\"q\":-11,\"r\":9,\"s\":2}', '{\"q\":-10,\"r\":9,\"s\":1}', '{\"q\":-9,\"r\":9,\"s\":0}', '{\"q\":-8,\"r\":9,\"s\":-1}', '{\"q\":-7,\"r\":9,\"s\":-2}', '{\"q\":-6,\"r\":9,\"s\":-3}', '{\"q\":-11,\"r\":1,\"s\":10}', '{\"q\":-11,\"r\":0,\"s\":11}', '{\"q\":-10,\"r\":-1,\"s\":11}', '{\"q\":-10,\"r\":-2,\"s\":12}', '{\"q\":-9,\"r\":-3,\"s\":12}', '{\"q\":-9,\"r\":-4,\"s\":13}', '{\"q\":-8,\"r\":-5,\"s\":13}', '{\"q\":-8,\"r\":-6,\"s\":14}', '{\"q\":-7,\"r\":-7,\"s\":14}', '{\"q\":-7,\"r\":-8,\"s\":15}', '{\"q\":-6,\"r\":-9,\"s\":15}', '{\"q\":-5,\"r\":-9,\"s\":14}', '{\"q\":-4,\"r\":-9,\"s\":13}', '{\"q\":-3,\"r\":-9,\"s\":12}', '{\"q\":-2,\"r\":-9,\"s\":11}', '{\"q\":-1,\"r\":-9,\"s\":10}', '{\"q\":0,\"r\":-9,\"s\":9}', '{\"q\":1,\"r\":-9,\"s\":8}', '{\"q\":2,\"r\":-9,\"s\":7}', '{\"q\":3,\"r\":-9,\"s\":6}', '{\"q\":4,\"r\":-9,\"s\":5}', '{\"q\":-2,\"r\":-8,\"s\":10}', '{\"q\":-3,\"r\":-7,\"s\":10}', '{\"q\":-4,\"r\":-6,\"s\":10}', '{\"q\":-5,\"r\":-5,\"s\":10}', '{\"q\":-6,\"r\":-4,\"s\":10}', '{\"q\":-7,\"r\":-4,\"s\":11}', '{\"q\":-6,\"r\":-2,\"s\":8}', '{\"q\":-6,\"r\":-1,\"s\":7}', '{\"q\":-6,\"r\":0,\"s\":6}', '{\"q\":-6,\"r\":1,\"s\":5}', '{\"q\":7,\"r\":-2,\"s\":-5}', '{\"q\":8,\"r\":-2,\"s\":-6}', '{\"q\":9,\"r\":-3,\"s\":-6}', '{\"q\":10,\"r\":-3,\"s\":-7}', '{\"q\":4,\"r\":5,\"s\":-9}', '{\"q\":4,\"r\":6,\"s\":-10}', '{\"q\":5,\"r\":6,\"s\":-11}', '{\"q\":5,\"r\":7,\"s\":-12}']\r\n\r\nexport default class BFS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.state = {\r\n            hexSize: 20,\r\n            hexOrigin: { x: 400, y: 300 },\r\n            currentHex: { q: 0, r: 0, s: 0, x: 0, y: 0 },\r\n            obstacles: DUMMY_OBSTACLES, \r\n            playerPosition: { q:0,r:0,s:0},\r\n            cameFrom: {},\r\n            hexPathMap: [],\r\n            path: []\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let hexParameters = this.getHexParameters();\r\n        this.setState({\r\n            canvasSize: { canvasWidth: 800, canvasHeight: 600 },\r\n            hexParameters: hexParameters\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n        this.canvasHex.width = canvasWidth;\r\n        this.canvasHex.height = canvasHeight;\r\n        this.canvasInteraction.width = canvasWidth;\r\n        this.canvasInteraction.height = canvasHeight;\r\n        this.canvasView.width = canvasWidth;\r\n        this.canvasView.height = canvasHeight;\r\n        this.getCanvasPosition(this.canvasInteraction);\r\n        this.drawHex(this.canvasInteraction, this.Point(this.state.playerPosition.x, this.state.playerPosition.y), 1, \"black\", \"grey\", 0.2);\r\n        this.drawHexes();\r\n        this.drawObstacles();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        if(nextState.currentHex !== this.state.currentHex){\r\n            const { q, r, s, x, y } = nextState.currentHex;\r\n            const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n            const ctx = this.canvasInteraction.getContext(\"2d\");\r\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n            this.drawPath();\r\n            return true;\r\n        }\r\n        if(nextState.cameFrom !== this.state.cameFrom) {\r\n            const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n            const ctx = this.canvasView.getContext(\"2d\");\r\n            ctx.clearRect(0,0,canvasWidth, canvasHeight);\r\n            for ( let l in nextState.cameFrom) {\r\n                const { q, r, s } = JSON.parse(l);\r\n                const { x, y } = this.hexToPixel(this.Hex(q,r));\r\n                this.drawHex(this.canvasView, this.Point(x,y), 1, \"black\", \"black\", 0.1);\r\n                var from = JSON.parse(nextState.cameFrom[l]);\r\n                var fromCoord = this.hexToPixel(this.Hex(from.q, from.r));\r\n                this.drawArrow(fromCoord.x, fromCoord.y, x, y);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getHexCornerCoord(center, i) {\r\n        let angle_deg = 60 * i + 30;\r\n        let angle_rad = Math.PI / 180 * angle_deg;\r\n        let x = center.x + this.state.hexSize * Math.cos(angle_rad);\r\n        let y = center.y + this.state.hexSize * Math.sin(angle_rad);\r\n        return this.Point(x,y);\r\n    }\r\n\r\n    Point(x,y,) {\r\n        return { x: x, y: y}\r\n    }\r\n\r\n    drawHex(canvasID, center, lineWidth, lineColor, fillColor) {\r\n        for (let i = 0; i <=5; i++){\r\n            let start = this.getHexCornerCoord(center, i);\r\n            let end = this.getHexCornerCoord(center, i + 1);\r\n            this.fillHex(canvasID, center, fillColor);\r\n            this.drawLine(canvasID, start, end, lineWidth, lineColor);\r\n        }\r\n    }\r\n \r\n    drawHexes(){\r\n        const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n        const { hexWidth, hexHeight, vertDist, horizDist } = this.state.hexParameters;\r\n        const hexOrigin = this.state.hexOrigin;\r\n        let qLeftSide = Math.round(hexOrigin.x/hexWidth) * 4;\r\n        let qRightSide = Math.round(canvasWidth - hexOrigin.x) / hexWidth * 2;\r\n        let rTopSide = Math.round(hexOrigin.y/(hexHeight/2));\r\n        let rBottomSide = Math.round((canvasHeight - hexOrigin.y)/(hexHeight/2));\r\n        var hexPathMap = [];\r\n      \r\n        var p = 0;\r\n        for (let r = 0; r<= rBottomSide; r++){\r\n            if(r % 2 === 0 && r !== 0){\r\n                p++;\r\n            }\r\n\r\n            for(let q = -qLeftSide; q <= qRightSide; q++){\r\n                const { x, y } = this.hexToPixel(this.Hex(q-p, r))\r\n                if((x> hexWidth/2 && x < canvasWidth - hexWidth/2) && (y > hexHeight/2 && y < canvasHeight - hexHeight/2)){\r\n                    this.drawHex(this.canvasHex, this.Point(x,y), 1, \"black\", \"grey\");\r\n                    // this.drawHexCoords(this.canvasHex, this.Point(x, y), this.Hex(q-p, r, -(q - p) - r));\r\n                    var bottomH = JSON.stringify(this.Hex(q-p, r, -(q-p) -r));\r\n                    if(!this.state.obstacles.includes(bottomH)){\r\n                        hexPathMap.push(bottomH);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var n = 0;\r\n        for(let r = -1; r >= -rTopSide; r--) {\r\n            if(r%2 !== 0){\r\n                n++;\r\n            }\r\n            for(let q = -qLeftSide; q <= qRightSide; q++){\r\n                const { x, y } = this.hexToPixel(this.Hex(q+n, r));\r\n                if((x>hexWidth/2 && x < canvasWidth - hexWidth/2) && (y > hexHeight/2 && y<canvasHeight - hexHeight/2)){\r\n                    this.drawHex(this.canvasHex, this.Point(x,y), 1, \"black\", \"grey\");\r\n                    // this.drawHexCoords(this.canvasHex, this.Point(x,y), this.Hex(q+n, r, -(q+n) -r));\r\n                    var topH = JSON.stringify(this.Hex(q+n, r, -(q+n) -r));\r\n                    if(!this.state.obstacles.includes(topH)){\r\n                        hexPathMap.push(topH);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        hexPathMap = [].concat(hexPathMap);\r\n        this.setState(\r\n            {hexPathMap: hexPathMap},\r\n            this.breadthFirstSearchCallback = () => this.breadthFirstSearch(this.state.playerPosition)\r\n        )\r\n    }\r\n\r\n    hexToPixel(h) {\r\n        let hexOrigin = this.state.hexOrigin;\r\n        let x = this.state.hexSize * Math.sqrt(3) * (h.q + h.r/2) + hexOrigin.x;\r\n        let y = this.state.hexSize * 3/2 * h.r + hexOrigin.y;\r\n        return this.Point(x, y);\r\n    }\r\n\r\n    Hex(q,r, s){\r\n        return {q: q, r: r, s:s};        \r\n    }\r\n\r\n    drawLine(canvasID, start, end, lineWidth, lineColor){\r\n        const ctx = canvasID.getContext(\"2d\");\r\n        ctx.beginPath();\r\n        ctx.moveTo(start.x, start.y);\r\n        ctx.strokeStyle = lineColor;\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.lineTo(end.x, end.y);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    drawHexCoords(canvasID, center, h) {\r\n        const ctx = canvasID.getContext(\"2d\");\r\n        ctx.fillText(h.q, center.x-10, center.y);\r\n        ctx.fillText(h.r, center.x+7, center.y);\r\n        ctx.fillText(h.s, center.x-12, center.y);\r\n    }\r\n\r\n    getHexParameters(){\r\n        let hexHeight = this.state.hexSize * 2;\r\n        let hexWidth = Math.sqrt(3)/2 * hexHeight;\r\n        let vertDist = hexHeight * 3/4;\r\n        let horizDist = hexWidth;\r\n        return { hexWidth, hexHeight, vertDist, horizDist }\r\n    }\r\n\r\n    handleMouseMove(e){\r\n        const { left, right, top, bottom } = this.state.canvasPosition;\r\n        const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n        const { hexWidth, hexHeight, vertDist, horizDist } = this.state.hexParameters;\r\n        // console.log(e.pageX, e.pageY)\r\n        let offsetX = e.pageX - left;\r\n        let offsetY = e.pageY - top;\r\n        const { q, r, s } = this.cubeRound(this.pixelToHex(this.Point(offsetX, offsetY)));\r\n        const { x, y } = this.hexToPixel(this.Hex(q, r,s));\r\n        let playerPosition = this.state.playerPosition;\r\n        this.getDistanceLine(this.Hex(0,0,0), this.Hex(q,r,s));\r\n        this.getPath(this.Hex(playerPosition.q, playerPosition.r, playerPosition.s), this.Hex(q,r,s));\r\n        this.drawHex(this.canvasInteraction, this.Point(x,y), \"blue\", 2);\r\n        if((x > hexWidth/2 && x< canvasWidth - hexWidth / 2) && (y > hexHeight / 2 && y < canvasHeight - hexHeight/2)){\r\n            this.setState({\r\n                currentHex: { q,r,s,x,y }\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    getCanvasPosition(canvasID){\r\n        let rect = canvasID.getBoundingClientRect();\r\n        this.setState({\r\n            canvasPosition: { left: rect.left, right: rect.right, top: rect.top, bottom: rect.bottom }\r\n        })\r\n    }\r\n\r\n    pixelToHex(p){\r\n        let size = this.state.hexSize;\r\n        let origin = this.state.hexOrigin;\r\n        let q = ((p.x - origin.x) * Math.sqrt(3)/3 - (p.y - origin.y)/3) /size;\r\n        let r = (p.y - origin.y) * 2/3 /size;\r\n        return this.Hex(q, r, -q - r);\r\n    }\r\n\r\n    cubeRound(cube){\r\n        var rx = Math.round(cube.q);\r\n        var ry = Math.round(cube.r);\r\n        var rz = Math.round(cube.s);\r\n\r\n        var x_diff = Math.abs(rx - cube.q)\r\n        var y_diff = Math.abs(ry - cube.r)\r\n        var z_diff = Math.abs(rz - cube.s)\r\n\r\n        if(x_diff > y_diff && x_diff > z_diff){\r\n            rx = -ry-rz\r\n        }\r\n        else if(y_diff > z_diff) {\r\n            ry = -rx-rz\r\n        }\r\n        else{\r\n            rz = -rx-ry\r\n        }\r\n        return this.Hex(rx, ry, rz);\r\n    }\r\n\r\n    cubeDirections(direction){\r\n        const cubeDirections = [this.Hex(1,0,-1), this.Hex(1,-1,0), this.Hex(0,-1,1), this.Hex(-1,0,1), \r\n            this.Hex(-1,1,0), this.Hex(0,1,-1)];\r\n        return cubeDirections[direction];\r\n    }\r\n\r\n    cubeAdd(a,b){\r\n        return this.Hex(a.q + b.q, a.r + b.r, a.s + b.s);\r\n    }\r\n\r\n    cubeSubtract(hexA, hexB) {\r\n        return this.Hex(hexA.q - hexB.q, hexA.r - hexB.r, hexA.s - hexB.s);\r\n    }\r\n\r\n    getCubeNeighbours(h, direction) {\r\n        return this.cubeAdd(h, this.cubeDirections(direction));\r\n    }\r\n\r\n    drawNeighbours(h){\r\n        for(let i = 0; i<=5; i++){\r\n            const { q, r, s } = this.getCubeNeighbours(this.Hex(h.q, h.r, h.s), i);\r\n            const { x, y } = this.hexToPixel(this.Hex(q, r, s));\r\n            this.drawHex(this.canvasInteraction, this.Point(x,y), \"red\", 2);\r\n        }\r\n    }\r\n\r\n    cubeDistance(hexA, hexB){\r\n        const { q ,r, s } = this.cubeSubtract(hexA, hexB);\r\n        return (Math.abs(q) + Math.abs(r) + Math.abs(s))/2;\r\n    }\r\n\r\n    linearInt(a,b,t){\r\n        return (a+ (b-a) * t);\r\n    }\r\n\r\n    cubeLinearInt(hexA, hexB, t){\r\n        return this.Hex(this.linearInt(hexA.q, hexB.q, t), this.linearInt(hexA.r, hexB.r, t), this.linearInt(hexA.s, hexB.s, t));\r\n    }\r\n\r\n    getDistanceLine(hexA, hexB){\r\n        let dist = this. cubeDistance(hexA, hexB);\r\n        var arr = [];\r\n        for(let i = 0; i <=dist; i++){\r\n            let center = this.hexToPixel(this.cubeRound(this.cubeLinearInt(hexA, hexB, 1.0 / dist * i)));\r\n            arr = [].concat(arr, center);\r\n        }\r\n        this.setState({\r\n            currentDistanceLine: arr\r\n        })\r\n    }\r\n\r\n    fillHex(canvasID, center, fillColor){\r\n        let c0 = this.getHexCornerCoord(center, 0);\r\n        let c1 = this.getHexCornerCoord(center, 1);\r\n        let c2 = this.getHexCornerCoord(center, 2);\r\n        let c3 = this.getHexCornerCoord(center, 3);\r\n        let c4 = this.getHexCornerCoord(center, 4);\r\n        let c5 = this.getHexCornerCoord(center, 5);\r\n        const ctx = canvasID.getContext(\"2d\");\r\n        ctx.beginPath();\r\n        ctx.fillStyle = fillColor;\r\n        ctx.globalAlpha = 0.1;\r\n        ctx.moveTo(c0.x, c0.y);\r\n        ctx.lineTo(c1.x, c1.y);\r\n        ctx.lineTo(c2.x, c2.y);\r\n        ctx.lineTo(c3.x, c3.y);\r\n        ctx.lineTo(c4.x, c4.y);\r\n        ctx.lineTo(c5.x, c5.y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    handleClick(){\r\n        const { currentHex, cameFrom } = this.state;\r\n        const { q, r, s } = currentHex;\r\n        if(cameFrom[JSON.stringify(this.Hex(q,r,s))]){\r\n            this.setState(\r\n                {playerPosition: this.Hex(q,r,s)},\r\n                this.breadthFirstSearchCallback = () => this.breadthFirstSearch(this.state.playerPosition)\r\n            )\r\n        }\r\n    }\r\n\r\n    drawObstacles(){\r\n        this.state.obstacles.map((l)=> {\r\n            const { q, r, s } = JSON.parse(l);\r\n            const { x, y } = this.hexToPixel(this.Hex(q,r,s));\r\n            this.drawHex(this.canvasHex, this.Point(x,y), 1, \"black\", \"green\")\r\n        })\r\n    }\r\n\r\n    getNeighbours(h){\r\n        var arr = [];\r\n        for(let i = 0; i<=5; i++){\r\n            const { q, r, s } = this.getCubeNeighbours(this.Hex(h.q, h.r, h.s), i);\r\n            arr.push(this.Hex(q, r, s));\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    breadthFirstSearch(playerPosition){\r\n        var frontier = [playerPosition];\r\n        var cameFrom = {};\r\n        cameFrom[JSON.stringify(playerPosition)] = JSON.stringify(playerPosition);\r\n        while (frontier.length !== 0){\r\n            var current = frontier.shift();\r\n            let arr = this.getNeighbours(current);\r\n            arr.map((l) => {\r\n                if(!cameFrom.hasOwnProperty(JSON.stringify(l)) && this.state.hexPathMap.includes(JSON.stringify(l))){\r\n                    frontier.push(l);\r\n                    cameFrom[JSON.stringify(l)] = JSON.stringify(current);\r\n                }\r\n            })\r\n        }\r\n        cameFrom = Object.assign({}, cameFrom);\r\n        this.setState({\r\n            cameFrom: cameFrom\r\n        })\r\n    }\r\n\r\n    getPath(start, current){\r\n        const { cameFrom } = this.state;\r\n        start = JSON.stringify(start);\r\n        current = JSON.stringify(current);\r\n        if(cameFrom[current] !== undefined){\r\n            var path = [current];\r\n            while (current !== start){\r\n                current = cameFrom[current];\r\n                path.push(current);\r\n            }\r\n            path = [].concat(path);\r\n            this.setState({\r\n                path:path\r\n            })\r\n        } \r\n    }\r\n\r\n    drawPath(){\r\n        let path = this.state.path;\r\n        for(let i =0; i<=path.length -1; i++){\r\n            const { q, r } = JSON.parse(path[i]);\r\n            const { x, y } = this.hexToPixel(this.Hex(q, r));\r\n            this.drawHex(this.canvasInteraction, this.Point(x,y), 1, \"black\", \"#05b9f5\");\r\n        }\r\n    }\r\n\r\n    drawArrow(fromx, fromy, tox, toy){\r\n        var ctx = this.canvasView.getContext(\"2d\");\r\n        var headlen = 5;\r\n        var angle = Math.atan2(toy-fromy, tox-fromx);\r\n        ctx.beginPath();\r\n        ctx.moveTo(fromx, fromy);\r\n        ctx.lineTo(tox, toy);\r\n        ctx.strokeStyle = \"#05b9f5\";\r\n        ctx.lineWidth = 3;\r\n        ctx.stroke();\r\n        ctx.beginPath();\r\n        ctx.moveTo(tox, toy);\r\n        ctx.globalAlpha = 0.3;\r\n        ctx.lineTo(tox-headlen*Math.cos(angle-Math.PI/7), toy-headlen*Math.sin(angle-Math.PI/7));\r\n        ctx.lineTo(tox-headlen*Math.cos(angle+Math.PI/7), toy-headlen*Math.sin(angle+Math.PI/7));\r\n        ctx.lineTo(tox, toy);\r\n        ctx.lineTo(tox-headlen*Math.cos(angle-Math.PI/7), toy-headlen*Math.sin(angle-Math.PI/7));\r\n        ctx.strokeStyle = \"05b9f5\";\r\n        ctx.lineWidth = 5;\r\n        ctx.stroke();\r\n        ctx.fillStyle = \"05b9f5\";\r\n        ctx.fill();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"BFS\">\r\n                <canvas ref = { canvasHex => this.canvasHex = canvasHex }></canvas>\r\n                <canvas ref = { canvasCoordinates => this.canvasCoordinates = canvasCoordinates }></canvas>\r\n                <canvas ref = { canvasView => this.canvasView = canvasView }></canvas>\r\n                <canvas ref = { canvasInteraction => this.canvasInteraction = canvasInteraction }\r\n                onMouseMove = {this.handleMouseMove}\r\n                onClick={this.handleClick}></canvas>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport BFS from './BFS/BFS';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <BFS></BFS>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}